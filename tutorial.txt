git tutorial

about version control system
	Local Version Control Systems
	Centralized Version Control Systems
	Distributed Version Control Systems
short history of git
git basics
	snapshots not differences
	nearly every operation is local
	git has integrity
	git generally only adds data
	The three states
		commited,staged,modified
		repository,staging area, working directory
	The Command Line
		Installing git
			apt-get install git
		first time git setup
			local,global,system
			your identity
				git config --global user.name "jithin"
				git config --global user.email jithin@space-kerala.org
			your editor
				vim by default
				git config --global core.editor emacs
			list your settings
				git config --list
				repeated values seen, last value often taken
				git config user.name
			getting help
				git help verb
				git <verb> help
				man git-<verb>

chapter 2..Git Basics
	creating a git directory
		git init
	adding files to staging area
		git add <filename>
	commit to the repository
		git commit -m 'my initial commit'
	cloning an existing repository
		git clone http://url <new folder name>
	recording changes to the git repository
		untracked ( not in the last snapshot) and tracked
		untracked  not modified modified staged.
	checking the status of files
		git status
	staging modified files
		every modified files needs to be added to the staging state using
		git add command
		changes to be commited
		changes not staged for commit
	short status
		git status -s or --short
		two columns and filename
		?? untracked
		MM modified(staged) modified(non staged)
		A  added to staged
	ignoring files
		using .gitignore
		the file that need not be tracked and listed.
	view your staged and unstaged status
		git status
		see what youâ€™ve changed but not yet staged,(non staged ---staged)
		 	git diff
		see what changes you commit ( staged to commit)
			git diff --staged
	committing your changes
		git commit
			def editor will pop up and  show how the commit should be stored
		git commit -v
	skipping the staging area
		git commit -a -m 'commiting without staging)
	removing files from git
		remove from git
		1. remove it tracked files ( remove it from staging area)
			rm readme
			git status
		2.commit...(both steps are done by git rm command )


		
		
		
	
		
	
